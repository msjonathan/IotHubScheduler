# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    defaults:
      run:
       working-directory: ./IoTHubScheduler.API
       
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     - name: 'Checkout GitHub Action'
       uses: actions/checkout@main
          
     - name: 'Login via Azure CLI'
       uses: azure/login@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
     - name: 'Build and push image'
       uses: azure/docker-login@v1
       with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
     - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/iothubscheduler:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/iothubscheduler:${{ github.sha }}
        
     - name: 'Deploy to Azure Container Instances'
       uses: 'azure/aci-deploy@v1'
       with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/iothubscheduler:${{ github.sha }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: iothub-scheduler
        secure-environment-variables: Redis=${{ secrets.CONNECTIONSTRINGS_REDIS }} CUSTOMCONNSTR_iothub=${{ secrets.CONNECTIONSTRINGS_IOTHUB }}
        location: 'west europe'
        
      #todo variables still need to be set
